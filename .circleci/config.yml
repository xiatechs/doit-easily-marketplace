version: 2.1

parameters:
  layer:
    type: string
    default: "placeholder"

jobs:

  auth:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: 
          name: Source env and authenticate
          command: |
            set -a; source .env; set +a
            echo $CIRCLE_OIDC_TOKEN > /tmp/oidc.token
            gcloud auth login --cred-file .circleci/gcp_oidc.json --update-adc --project $GCP_PROJECT_ID
            mv $HOME/.config/gcloud/application_default_credentials.json /tmp/application_default_credentials.json
      - save_cache:
          key: gcp-auth-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - /tmp/application_default_credentials.json
            - /tmp/oidc.token

  terragrunt-plan-setup:
    circleci_ip_ranges: true
    docker:
      - image: alpine/terragrunt
    steps:
      - checkout
      - restore_cache:
          keys:
            - gcp-auth-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run:
          name: Terragrunt Plan Setup
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS=/tmp/application_default_credentials.json
            set -a; source .env; set +a
            terragrunt run-all plan

  terragrunt-apply-setup:
    circleci_ip_ranges: true
    docker:
      - image: alpine/terragrunt
    steps:
      - checkout
      - restore_cache:
          keys:
            - gcp-auth-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run:
          name: Terragrunt Apply Setup
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS=/tmp/application_default_credentials.json
            set -a; source .env; set +a
            terragrunt run-all apply \
              --terragrunt-non-interactive

  terragrunt-destroy:
    circleci_ip_ranges: true
    docker:
      - image: alpine/terragrunt
    parameters:
    steps:
      - checkout
      - restore_cache:
          keys:
            - gcp-auth-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run:
          name: Terragrun Destroy
          command: |
            export GOOGLE_APPLICATION_CREDENTIALS=/tmp/application_default_credentials.json
            set -a; source .env; set +a
            terragrunt run-all destroy \
              --terragrunt-non-interactive

workflows:
  deploy:
    jobs:
      - auth
      - terragrunt-plan-setup:
          requires:
            - auth
      - hold:
          type: approval
          name: terragrunt-apply-setup-approval
          requires:
            - terragrunt-plan-setup
      - terragrunt-apply-setup:
          requires:
           - terragrunt-apply-setup-approval